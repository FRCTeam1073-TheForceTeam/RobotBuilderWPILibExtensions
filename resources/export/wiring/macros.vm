#macro( table_with_components $title $label $module_name $port_name $module_number )
    #set($ports = $helper.filterComponents($module_name, $port_name, $module_number, $robot))
    #if( $ports.keySet().size() > 0 )
        <h2>$title</h2>
	<table><tr>
	<th class="pound">#</th>
	<th>$label</th></tr>
	#to_rows($ports)
	</table>
    #end
#end ## macro

## Filter components and make a table.
#macro( to_rows $my_ports )
    #foreach ($port in [1..20])
        #if( $my_ports.containsKey("$port") )
	    #tr($port, $my_ports.get("$port"))
	#end
    #end ##forech
#end ## macro

## Generate a table row
#macro( tr $port $name )
<tr><td>$port</td><td>$name</td></tr>
#end

## Generate the DIO table for a module
#macro( DIO $title $label $module )
    #table_with_components($title, $label, "Module (Digital)", "Channel (Digital)", $module)
#end ##macro

## Generate the PWM table for a module
#macro( PWM $title $label $module )
    #table_with_components($title, $label, "Module (Digital)", "Channel (PWM)", $module)
#end ##macro

## Generate the CAN ID table for a module
#macro( CAN $title )
    #set($ports = $helper.filterComponents("CAN ID", $robot))
    #if( $ports.keySet().size() > 0 )
        <h2>$title</h2>
	<table><tr>
	<th class="pound">ID</th>
	<th>Device</th></tr>
	#to_rows($ports)
	</table>
    #end
#end ##macro

## Generate the PWM table for a module
#macro( Relay $title $label $module )
    #table_with_components($title, $label, "Module (Digital)", "Channel (Relay)", $module)
#end ##macro

## Generate the Analog table for a module
#macro( Analog $title $label $module )
    #table_with_components($title, $label, "Module (Analog)", "Channel (Analog)", $module)
#end ##macro

## Generate the Analog table for a module
#macro( Solenoid $title $label $module )
    #table_with_components($title, $label, "Module (Solenoid)", "Channel (Solenoid)", $module)
#end ##macro