## Generate Java style variable names from a component name
#macro( variable $name )${name.substring(0,1).toLowerCase()}${name.substring(1).replace(' ', '')}#end

## Generate Java style class names from a component name
#macro( class $name )${name.replace(' ', '')}#end

## Generate Java style consant names from a component name
#macro( constant $name )${name.replace(' ', '_').toUpperCase()}#end

## Get the type of a robot component
#macro( type $component )${helper.getInstruction($component, "ClassName")}#end

## Get the declaration instruction of a robot component
#macro( declaration $component )${helper.getInstruction($component, "Declaration")}#end

## Get the constructor instruction of a robot component
#macro( constructor $component )${helper.getInstruction($component, "Construction")}#end

## Get the livewindow instruction of a robot component
#macro( livewindow $component )${helper.getInstruction($component, "LiveWindow")}#end

## Get the extra instruction of a robot component
#macro( extra $component )${helper.getInstruction($component, "Extra")}#end

## Get the extra instruction of a robot component
#macro( prototype $component )${helper.getInstruction($component, "Prototype")}#end

## Get the extra instruction of a robot component
#macro( function $component )${helper.getInstruction($component, "Function")}#end

## Get the extra instruction of a robot component
#macro( pid $component )${helper.getInstruction($component, "PID")}#end

## Generate autogenerated code blocks
#macro( autogenerated_code $id $space )
$space// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=$id.toUpperCase()
$bodyContent$space// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=$id.toUpperCase()
#end

## Generate the header
#macro( header )
/* FIRST Team 1073's RobotBuilder (0.0.2) for WPILibExtensions ---
Do not mix this code with any other version of RobotBuilder! */

#end